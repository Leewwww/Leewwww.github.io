(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{359:function(t,o,_){"use strict";_.r(o);var v=_(43),n=Object(v.a)({},(function(){var t=this,o=t.$createElement,_=t._self._c||o;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("当谈到继承时，JavaScript 只有一种结构：对象。每个实例对象（ object ）都有一个私有属性（称之为 "),_("strong",[t._v("proto")]),t._v("）指向它的构造函数的原型对象（prototype ）。该原型对象也有一个自己的原型对象( "),_("strong",[t._v("proto")]),t._v(" ) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。")])]),t._v(" "),_("ul",[_("li",[t._v("prototype:每个"),_("strong",[t._v("实例对象")]),t._v("（函数）都有这个属性，普通的对象是没有这个属性的（JS中一切皆为对象）。它是构造函数的原型对象。")]),t._v(" "),_("li",[t._v("__ proto__:每个"),_("strong",[t._v("对象")]),t._v("都有这个属性，因为函数也是个对象，所以函数也有这个属性")])]),t._v(" "),_("p",[t._v("让我们先来了解几个概念：")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("构造函数")]),t._v(" : 在js中，构造函数其实就是一个普通的函数，当使用"),_("strong",[t._v("new")]),t._v("操作符来实例化这个函数时，它就可以被称作为构造函数。")]),t._v(" "),_("li",[_("strong",[t._v("原型（prototype）")]),t._v(" : 原型就是一个对象，是实例继承的的那个对象的属性。")]),t._v(" "),_("li",[_("strong",[t._v("原型链")]),t._v(" : 原型链是js对象上一个指向一个原型对象的链，在访问对象原型的过程中形成的链状关系。")])])])}),[],!1,null,null,null);o.default=n.exports}}]);